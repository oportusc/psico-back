# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Appointment {
  cancelled: Boolean!
  confirmed: Boolean!
  createdAt: DateTime!
  date: DateTime!
  googleEventId: String
  googleMeetLink: String
  id: ID!
  psychologist: Psychologist!
  psychologistId: String!
  reason: String!
  time: String!
  type: AppointmentType!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

"""Type of appointment (online or in person)"""
enum AppointmentType {
  IN_PERSON
  ONLINE
}

input CreateAppointmentInput {
  date: String!
  psychologistId: String!
  reason: String!
  time: String!
  type: AppointmentType!
  userId: String!
}

type CreateEventResponse {
  eventId: String!
  meetLink: String
  message: String
  success: Boolean!
}

input CreatePsychologistInput {
  calendarColor: String
  description: String
  email: String!
  firstName: String!
  googleCalendarId: String!
  lastName: String!
  phone: String
  serviceAccountKeyPath: String
  specialty: String
}

input CreateUserInput {
  address: String
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
  rut: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  activatePsychologist(id: ID!): Psychologist!
  cancelAppointment(id: String!): Appointment!
  confirmAppointment(id: String!): Appointment!
  createAppointment(createAppointmentInput: CreateAppointmentInput!): Appointment!
  createPsychologist(createPsychologistInput: CreatePsychologistInput!): Psychologist!
  createTestEvent(description: String!, endDateTime: String!, includeGoogleMeet: Boolean! = false, startDateTime: String!, summary: String!): CreateEventResponse!
  createUser(createUserInput: CreateUserInput!): User!
  removeAppointment(id: String!): Appointment!
  removePsychologist(id: ID!): Psychologist!
  removeUser(id: String!): User!
  updateAppointment(id: String!, updateAppointmentInput: UpdateAppointmentInput!): Appointment!
  updatePsychologist(id: ID!, updatePsychologistInput: UpdatePsychologistInput!): Psychologist!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
}

type Psychologist {
  active: Boolean!
  appointments: [Appointment!]
  appointmentsCount: Int!
  calendarColor: String
  createdAt: DateTime!
  description: String
  email: String!
  firstName: String!
  fullName: String!
  googleCalendarId: String!
  id: ID!
  lastName: String!
  phone: String
  serviceAccountKeyPath: String
  specialty: String
  updatedAt: DateTime!
}

type Query {
  appointment(id: String!): Appointment!
  appointments: [Appointment!]!
  appointmentsByPsychologist(psychologistId: String!): [Appointment!]!
  appointmentsByUser(userId: String!): [Appointment!]!
  getEventsForDate(date: String!): [String!]!
  pastAppointments: [Appointment!]!
  psychologist(id: ID!): Psychologist!
  psychologistByCalendarId(googleCalendarId: String!): Psychologist!
  psychologistByEmail(email: String!): Psychologist!
  psychologists: [Psychologist!]!
  psychologistsAll: [Psychologist!]!
  testCalendarConnection: Boolean!
  upcomingAppointments: [Appointment!]!
  user(id: String!): User!
  userByRut(rut: String!): User!
  users: [User!]!
}

input UpdateAppointmentInput {
  date: String
  psychologistId: String
  reason: String
  time: String
  type: AppointmentType
  userId: String
}

input UpdatePsychologistInput {
  active: Boolean
  calendarColor: String
  description: String
  email: String
  firstName: String
  googleCalendarId: String
  lastName: String
  phone: String
  serviceAccountKeyPath: String
  specialty: String
}

input UpdateUserInput {
  address: String
  email: String
  firstName: String
  lastName: String
  phone: String
  rut: String
}

type User {
  address: String
  appointments: [Appointment!]
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  phone: String!
  rut: String!
  updatedAt: DateTime!
}